#summary Описание формата манифеста anybalance-manifest.xml

= Введение =

Манифест - xml-файл, описывающий все параметры провайдера. Он должен обязательно называться `anybalance-manifest.xml`. Если это файл не найден в zip архиве провайдера, то он даже не будет показан в списке файлов для установки провайдеров в AnyBalance.

= Структура манифеста =

{{{
<?xml version="1.0" encoding="utf-8"?>
<provider>
  <id major_version="string" version="integer">provider-text-id</id>
  <name>Название провайдера</name>
  <description>
    Описание провайдера
  </description>
  <author>Author namr &lt;author@email.com&gt;</author>
  <files>
    <icon>icon.png</icon> <!-- файл иконки -->
    <preferences>preferences.xml</preferences> <!-- Файл настроек -->
    <js>main.js</js> <!-- необходим как минимум один файл с функцией main() -->
    <js>lib.js</js> <!-- Можно (необязательно) указывать доп. файлы js -->
  </files>
  <counters> <!-- описание счетчиков этого провайдера -->
    <counter id="counter-id" name="Название счетчика" prefix="префикс " suffix=" суффикс" type="counter-type"/>
    <!-- Счетчиков может быть сколько угодно -->
  </counters>
</provider>
}}}

== <id> ==
Содержит текстовый идентификатор провайдера. Он должен совпадать с названием каталога провайдера в [http://code.google.com/p/any-balance-providers/source/browse/#svn%2Ftrunk репозитории], так будет гарантироваться его уникальность. В качестве атрибутов у `id` указывается версия провайдера - текстовая (`major_version`) для пользователя и целое число (`version`) для всех. Пользователю будет показываться склеенная версия: `major_version.version`, но все операции по сравнению версий внутри AnyBalance проходят по `version`.

<b>Внимание!</b> Все изменения провайдера, при которых следует опубликовывать провайдер в списке доступных для скачивания, должны сопровождаться *увеличением значения в атрибуте `version`*!

== <description> ==
Описание провайдера и его функций

== <author> ==
Автор провайдера и его почта для связи с ним разгневанных и благодарных пользователей :)

== <files> ==
Содержит список всех файлов, составляющих провайдер, с указанием категории (функции) этого файла. Сейчас есть следующие категории:

=== <icon> ===
Файл, содержащий [Icon иконку провайдера]. Делайте его в высоком разрешении, чтобы хорошо выглядел на современных устройствах. Файл с такой категорией может быть только один.

=== <preferences> ===
xml-файл, описывающий [Preferences пользовательские настройки провайдера]. Настройки показываются пользователю при настройке аккаунта, основанном на этом провайдере. Выбор пользователя каждый раз передаётся в JavaScript провайдера при запросах счетчиков. Этот файл похож на xml-файлы настроек в Android, но проще. Файл такой категории может быть только один.

=== <js> ===
JavaScript провайдера, достающий откуда-то значения счетчиков и передающий их AnyBalance. Таких файлов может быть несколько, каждый должен быть декларирован в отдельном теге `js`. Но один из файлов обязательно должен определять функцию main(), которая принимает управление при запросе счетчиков.

== <counters> ==
Определяет список счетчиков - единиц информации, которые предоставляет данный провайдер. Счетчиков может быть сколько угодно, но должен быть как минимум один. Рассмотрим описание счетчика подробнее.

== <counter> ==
Счетчик должен обязательно иметь `id` и название `name`. Остальные атрибуты опциональные и имеют значения по умолчанию. 

 * `name` - определяет, под каким именем счетчик будет виден пользователю.
 * `id` - определяет название переменной в JavaScript, в которой передается значение счетчика.
 * `prefix` - необязательный атрибут, определяющий оформление вывода значения счетчика. `prefix` добавляется перед значением. Например, если определить числовой счетчик с префиксом `prefix="$"`, то значение счетчика в AnyBalance будет отображаться как, например $123.45.
 * `suffix` - необязательный атрибут, определяющий оформление вывода значения счетчика. `suffix` добавляется после значения. Например, если определить числовой счетчик с суффиксом `suffix=" р"`, то значение счетчика в AnyBalance будет отображаться как, например 123.45 р.
 * `units` - синоним `suffix`. 
 * `type` - тип счетчика (по-умолчанию `numeric`). Счетчики бывают разных типов, например, численные, текстовые, временные промежутки и др. Поддерживаются следующие типы:
   * `numeric` - числовой, такой счетчик может отображаться на графике, для него высчитывается разница с прошлыми значениями. 
   * `text` - текстовый, на графике не отображается, разница значений тоже не считается по понятным причинам.
   * `html` - то же, что и текстовый, но позволяется разметка html. При этом переносы строк воспринимаются только в виде `<br/>`. Поддерживается очень ограниченный набор разметки, `img` не поддерживается. [http://commonsware.com/blog/Android/2010/05/26/html-tags-supported-by-textview.html Список поддерживаемых тэгов].
   * `time_interval` - измеряемый в секундах числовой счетчик. На графике отображается, разница считается, но отображается везде в виде H:mm:ss.
   * `time` - дата (миллисекунды с 1970 года)

Для того, чтобы можно было настраивать показ счетчиков, счетчики обязательно должны быть декларированы в манифесте.