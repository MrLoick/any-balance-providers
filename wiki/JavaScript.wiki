#summary JavaScript файлы провайдера

Процедура получения значений счетчиков, предоставляемых провайдером, реализуется на языкe [http://ru.wikipedia.org/wiki/Javascript JavaScript] с использованием [AnyBalanceAPI AnyBalance API].

Провайдер может иметь один или несколько [http://ru.wikipedia.org/wiki/Javascript JavaScript] файлов, главное, чтобы в одном из них была определена функция main, например,

{{{
function main(){
  //Получим настройки аккаунта
  var prefs = AnyBalance.getPreferences();

  //Получаем значения счетчиков
  //что-то для этого делаем
  var strGet = AnyBalance.requestGet(url);
  var strPost = AnyBalance.requestGet(url, {login: prefs.login, pass: prefs.pass});

  //извлекаем из строк значения счетчиков
  //...

  //Возвращаем результат
  AnyBalance.setResult({success: true, counter: counter});
}
}}}

Все декларированные в [Manifest манифесте] под категорией `js` файлы будут загружены при обновлении AnyBalance аккаунта в Android [http://developer.android.com/reference/android/webkit/WebView.html WebView] и вызвана функция main(). Получив значения счетчиков, провайдер обязательно должен вызвать [AnyBalanceAPI#setResult AnyBalance.setResult()], чтобы передать полученные счетчики программе AnyBalance.

Для получения счетчиков провайдерам необходимо пользоваться [AnyBalanceAPI AnyBalance API]. Обычная схема работы функции main:
 * Получаем настройки с помощью [AnyBalanceAPI#getPreferences AnyBalance.getPreferences]
 * Получаем страницы, содержащие нужные нам значения, с помощью функций [AnyBalanceAPI#requestGet AnyBalance.requestGet] и [AnyBalanceAPI#requestPost AnyBalance.requestPost]
 * Извлекаем из них значения счетчиков, не забывая про оптимизацию ([AnyBalanceAPI#isAvailable AnyBalance.isAvailable])
 * Возвращаем результат - [AnyBalanceAPI#setResult AnyBalance.setResult]

Ничего сложного. Можно посмотреть примеры, например 
 * [TutorialHelloWorld Hello, World!]
 * [TutorialExchangeCbr Курсы валют]
 * [TutorialTrackingRussianPost Отслеживание посылок]
 * [TutorialXML Обработка XML]